\begin{theindex}

  \item 2's complement, 149

  \indexspace

  \item $\alpha$, \see{latency}{235}
  \item $\beta$, \see{bandwidth}{235}
  \item $\gamma$, \see{computation rate}{235}

  \indexspace

  \item active messages, 105
  \item acyclic graph, 342
  \item \acl {AMR} (AMR), 300
  \item address space, 71
    \subitem shared, 71
  \item adjacency
    \subitem matrix, 313
  \item adjacency graph, 204, 343
  \item adjacency matrix, 343
  \item \acl {AVX} (AVX), 69, 135, 318
  \item affinity, 83--84
  \item allgather, 237--238, 242
  \item Alliant FX/8, 37
  \item allreduce, 237
  \item AMD, 69, 146
    \subitem Barcelona, 32, 34
    \subitem Opteron, 35, 46, 51, 52
  \item Amdahl's law, 125--127
  \item AMR, \see{Adaptive Mesh Refinement}{496}
  \item analytics
    \subitem graph, 306
  \item AOS, \see{Array-Of-Structures}{496}
  \item Apple
    \subitem iCloud, 142
  \item archive utility, 374
  \item arithmetic
    \subitem computer, 148--165
    \subitem finite precision, 148
    \subitem intensity, 39
  \item array processors, 68, 131
  \item array syntax, 100
  \item \acl {AOS} (AOS), 107
  \item assembly
    \subitem inline, 33
    \subitem language, 24
  \item asynchronous communication, 109
  \item atomic operation, 38, 81--83
  \item atomicity, \see{atomic operation}{81}
  \item automaton, 349--350
    \subitem linear bounded, 350
  \item autotuning, 56
  \item AVX, \see{Advanced Vector Extensions}{496}
  \item axpy, 40

  \indexspace

  \item background process, 364
  \item backwards stability, 161
  \item banded matrix, 176
    \subitem storage, 200--201
  \item bandwidth, 22, 121, 134, 235
    \subitem aggregate, 111
    \subitem measure in GT/s, 132
    \subitem of a   matrix, \see{halfbandwidth}{200}
    \subitem of a matrix, 200
  \item bandwidth bound algorithm, 145
  \item bandwidth-bound, 41
  \item Barnes-Hut algorithm, 316--317
  \item barrier, 106
  \item base, 151
  \item bash, 353
  \item \acl {BLAS} (BLAS), 423
  \item BBN
    \subitem Butterfly, 117
  \item BEM, \see{Boundary Element Method}{496}
  \item benchmarking, 28, 41
  \item BFS, \see{Breadth-First Search}{496}
  \item bidirectional exchange, 238
  \item big-endian, 403, 411
  \item binary-coded-decimal, 152
  \item bisection bandwidth, 111
  \item bisection width, 111
  \item BitBucket, 391
  \item bitonic sequence, 304
  \item Bitonic sort, 301
  \item bitonic sort, 128
  \item bitonic sorting, 303--305
  \item bits, 148
  \item Bjam, 376
  \item BLAS, \see{Basic Linear Algebra Subprograms}{496}
  \item block Jacobi, 255, 271
  \item block matrix, 178, 231, 264
  \item block tridiagonal, 178, 210, 267
  \item blocking communication, 89, 96
  \item blocking for cache reuse, 49
  \item \acl {BEM} (BEM), 249
  \item \acl {BVP} (BVP), 173--181
  \item branch misprediction, 20
  \item branch penalty, 20
  \item breakpoint, 445--446
  \item broadcast, 92, 236
  \item BSP, \see{Bulk Synchronous Parallel}{496}
  \item bubble sort, 300
  \item buffering, 233
  \item \acl {BSP} (BSP), 106
  \item bus, 21
    \subitem memory, 112
    \subitem speed, 23
    \subitem width, 23
  \item butterfly exchange, 116
  \item BVP, \see{Boundary Value Problem}{496}
  \item by reference, 453
  \item bytes, 148

  \indexspace

  \item C
    \subitem array layout, 451--452
    \subitem language standard, 162
  \item C++
    \subitem language standard, 162
    \subitem linking to, 450--451
    \subitem name mangling, 450
  \item cache, 14, 21, \textbf{25--32}
    \subitem associative, 31
    \subitem block, 28
    \subitem blocking, 49, 54, 198
    \subitem coherence, 27, 36--39, 46, 73, 112, 278
    \subitem hierarchy, 26, 57
    \subitem hit, 26
    \subitem hot, 478
    \subitem line, 28--30, 43
    \subitem mapping, 30
    \subitem miss, 26, 33
    \subitem miss, capacity, 27
    \subitem miss, compulsory, 27
    \subitem miss, conflict, 27
    \subitem miss, invalidation, 27
    \subitem oblivious programming, 57--58
    \subitem replacement policies, 28
    \subitem shared, 72
    \subitem warming, 478
  \item cacheline
    \subitem boundary aligment, 29
    \subitem invalidation, 37
  \item CAF, \see{Co-array Fortran}{496}
  \item capability computing, 142--143
  \item capacity computing, 142--143
  \item cartesian mesh, 113
  \item cartesian product, 98
  \item Cayley-Hamilton theorem, 219
  \item ccNUMA, 73
  \item CCS, \see{Compressed Column Storage}{496}
  \item CDC
    \subitem Cyber205, 70
  \item Cell processor, 131
  \item CG, \see{Conjugate Gradients}{496}
  \item CGS, \see{Classical Gram-Schmidt}{496}
  \item channel rate, 121
  \item channel width, 121
  \item Chapel, 100, 103--104
  \item characteristic polynomial, 219
  \item Charm++, 105
  \item checkerboard ordering, 178
  \item Cheeger's
    \subitem constant, 347
    \subitem inequality, 347
  \item chess, 76
  \item Cholesky factorization, 193, 276
  \item Chomsky hierarchy, 350
  \item Cilk, 85
  \item cleanup code, 48
  \item clique, 343
  \item clock speed, 20
  \item Clos network, 120
  \item cloud computing, 138--142
  \item cluster
    \subitem node, \see{node}{497}
  \item clusters, 69, 70
    \subitem Beowulf, 70
  \item \acl {CAF} (CAF), 102--103
  \item co-processor, \textbf{130--131}, 147
  \item coherence
    \subitem cache, 99
  \item collective communication, 92, 95, 235--238
  \item collective operation, 93, 121, 235--238
  \item colour number, 266, 342
  \item colouring, 265
  \item column-major, 61, 423, 451
  \item communication
    \subitem blocking, 95
    \subitem overlapping computation with, 108
  \item communication overhead, 126
  \item compare-and-swap, 301
  \item compiler, 55, 75, 101
    \subitem directives, 86, 102
    \subitem flags, 163
    \subitem optimization, 24
      \subsubitem vs round-off, 162--163
    \subitem optimization levels, 154
    \subitem parallelizing, 78
  \item complexity, 334
    \subitem computational, 197--198, 334
    \subitem of iterative methods, 228
    \subitem space, 208--209, 334
  \item \acl {CCS} (CCS), 203
  \item \acl {CRS} (CRS), 202--204, 249
  \item computation rate, 121, 235
  \item compute-bound, 41, 144
  \item concurrency, 84
  \item condition number, 161, 328
  \item conditionally stable, 170
  \item congestion, 111
  \item \acl {CG} (CG), 226, 275
  \item Connection Machine, 68, 146
  \item contention, 111
  \item context, \textbf{81}
    \subitem switch, \textbf{81}, 130, 134
  \item control flow, 12, 277
  \item conveniently paralllel, 76
  \item COO, \see{Coordinate Storage}{496}
  \item coordinate storage, 203
  \item coordination language, 105
  \item core, \textbf{15--36}
    \subitem vs processor, 36
  \item core dump, 438
  \item correct rounding, 156
  \item Courant-Friedrichs-Lewy condition, 173
  \item CPU-bound, \see{compute-bound}{497}
  \item cpu-bound, 14
  \item Cramer's rule, 187
  \item Crank-Nicolson method, 185
  \item Cray, 231
    \subitem Cray-1, 70
    \subitem Cray-2, 70
    \subitem T3E, 97
    \subitem X/MP, 70
    \subitem XE6, 73
    \subitem XMT, 81, 130
    \subitem Y/MP, 70
  \item Cray Inc., 130
  \item Cray Research, 130
  \item critical path, 277
  \item critical section, 82
  \item crossbar, 72, 116
  \item CRS, \see{Compressed Row Storage}{496}
  \item CUDA, 69, 131, 132, 147
  \item Cuthill-McKee ordering, 210, 269
  \item cycle (in graph), 341
  \item cyclic distribution, 244

  \indexspace

  \item DAG, \see{Directed Acyclic Graph}{496}
  \item data decomposition, 232
  \item data flow, 12, 277
  \item data parallel, 130, 132, 134
  \item data parallelism, 132
  \item data reuse, 21, 39
  \item ddd, 438
  \item DDT, 438
  \item deadlock, 85, 91, 96
  \item debug flag, 439
  \item debugger, 438
  \item debugging, 438--447
  \item DEC
    \subitem Alpha, 71
  \item defensive programming, 430
  \item degree, 110, 341
  \item Delauney mesh refinement, 75
  \item Dennard scaling, 61
  \item denormal, \see{floating point numbers, unnormalized}{153}
  \item Dense linear algebra, 231--245
  \item dependency, 19
  \item dgemm, \texttt{59}
  \item diagonal dominance, 196
  \item diagonal storage, 200--202, 231
  \item diameter, 110, 341
  \item die, 14, 26
  \item difference stencil, 179
  \item differential operator, 174
  \item Dijkstra's shortest path algorithm, 310
  \item direct mapping, 30
  \item \acl {DAG} (DAG), 277, 342
  \item directives, \see{compiler, directives}{497}
  \item directories, 353
  \item Dirichlet boundary condition, 173, 175
  \item discretization, 169
  \item distributed computing, 138--142
  \item divide-and-conquer, 57
  \item domain decomposition, 259
  \item double precision, 134
  \item DRAM, \see{Dynamic Random-Access Memory}{496}
  \item DSP, \see{Digital Signal Processing}{496}
  \item dynamic programming, 308
  \item \acl {DRAM} (DRAM), 25

  \indexspace

  \item Earth Simulator, 145
  \item ebook, 142
  \item edges, 340
  \item efficiency, 123
  \item eigenvector
    \subitem dominant, 331
  \item Eispack, 423
  \item Elliptic PDEs, 174
  \item embarassingly parallel, 76, 123
  \item embedding, 112
  \item environment variable, 361
  \item escape, 360, 369
  \item ETA-10, 70
  \item Euler
    \subitem explicit, 168--170
    \subitem implicit, 170--172
  \item evicted, 38
  \item excess, 151
  \item executable, 353
  \item exponent, 151
  \item extended precision, 157, 163, \textbf{164}

  \indexspace

  \item Facebook, 306
  \item false sharing, \underline{39}, 88, 99
  \item \acl {FFT} (FFT), 52
  \item \acl {FMM} (FMM), 317
  \item fast solvers, 217
  \item fat tree, 116, 118--120
    \subitem bisection width of a, 118
    \subitem clusters based on, 120
  \item fault tolerance, 144
  \item FD, \see{Finite Difference}{496}
  \item FDM, \see{Finite Difference Method}{496}
  \item FEM, \see{Finite Element Method}{496}
  \item FFT, \see{Fast Fourier Transform}{496}
  \item Fiedler's theorem, 347
  \item field scaling, 61
  \item files, 353
  \item fill locations, 207
  \item fill-in, 206--211, 267
    \subitem estimates, 208--209
    \subitem reduction, 209--211
  \item finite difference, 169
  \item \acl {FDM} (FDM), 175
  \item \acl {FEM} (FEM), 180, 253
  \item \acl {FSA} (FSA), 38, 349--350
  \item finite volume method, 180
  \item first-touch policy, 84
  \item floating point
    \subitem unit, \textbf{16--17}
  \item floating point   arithmetic
    \subitem associativity of, 161
  \item floating point numbers
    \subitem normalized, 153
    \subitem representation, 151--152
    \subitem unnormalized, 153
  \item floating point pipeline, 47
  \item flops, 20
  \item Floyd-Warshall algorithm, 308--309
    \subitem parallelization of the, 314
  \item flushed, 28
  \item flushing
    \subitem pipeline, 83
  \item FMA, \see{Fused Multiply-Add}{496}
  \item FMM, \see{Fast Multipole Method}{496}
  \item FOM, \see{Full Orthogonalization Method}{496}
  \item foreground process, 364
  \item fork-join, 78, 79
  \item Fortran, 423
    \subitem array layout, 451--452
    \subitem declarations in, 163
    \subitem iso C bindings, 449
    \subitem language standard, 162
  \item Fortress, 104
  \item FPGA, \see{Field-Programmable Gate Array}{496}
  \item FPU, \see{Floating Point Unit}{496}
  \item \acl {FSB} (FSB), 21
  \item FSA, \see{Finite State Automaton}{496}
  \item FSB, \see{Front-Side Bus}{496}
  \item \acl {FOM} (FOM), 223
  \item fully associative, 31
  \item fully connected, 110
  \item functional programming, 143--144
  \item \acl {FMA} (FMA), 17, 157, 164

  \indexspace

  \item gather, 92, 161, 237
  \item Gauss-Seidel, 215
  \item GCC, 86
  \item gdb, 438--446
  \item \acl {GPGPU} (GPGPU), 132
  \item \acl {GMRES} (GMRES), 228
  \item ghost region, 105, 246, 273, 274, 323
  \item Global Arrays, 98
  \item GMRES, \see{Generalized Minimum Residual}{496}
  \item GNU, 438
    \subitem gdb, \see{gdb}{438}
    \subitem gnuplot, \see{gnuplot}{427}
    \subitem Make, \see{Make}{376}
  \item gnuplot, 427
  \item Goodyear
    \subitem MPP, 68
  \item Google, 107, 249, 311
    \subitem code, 391
    \subitem Google Docs, 140--142
  \item Goto
    \subitem Kazushige, 59
  \item GPGPU, \see{General Purpose Graphics Processing Unit}{496}
  \item GPU, \see{Graphics Processing Unit}{496}
  \item Gram-Schmidt, 223, 328--330
    \subitem modified, 223, 329
  \item granularity, 77, 81
  \item Grape computer, 131
  \item graph
    \subitem adjacency, 210, \see{adjacency graph}{343}
    \subitem colouring, 256, 266, 342
    \subitem directed, 340
    \subitem Laplacian, 137, 346
    \subitem random, 311
    \subitem social, 306
    \subitem theory, 340--348
      \subsubitem of parallel computers, 110
    \subitem undirected, 110, 205, 340
  \item \acl {GPU} (GPU), 70, 132--135, 146, 156, 250
  \item Gray code, 115
  \item grid (CUDA), 133
  \item grid computing, 140
  \item GS, \see{Gram-Schmidt}{496}
  \item guard digit, 157
  \item Gustafson's law, 126--127

  \indexspace

  \item halfbandwidth, 208
    \subitem left, 201
    \subitem right, 201
  \item halo, \see{ghost region}{497}
  \item hardware prefetch, 33
  \item Harwell-Boeing matrix format, 203
  \item heap, 78
  \item heat equation, 173, 181
  \item Hessenberg matrix, 222
  \item heterogeneous computing, 147
  \item hg, \see{mercurial}{398}
  \item \acl {HPF} (HPF), 100, 102
  \item \acl {HPC} (HPC), 105, 140
  \item Horner's rule, 272, 314
  \item host process, 130
  \item host processor, 147
  \item Householder reflectors, 333
    \subitem in LU factorization, 192
  \item HPC, \see{High-Performance Computing}{496}
  \item HPF, \see{High Performance Fortran}{496}
  \item hybrid computing, 98--99
  \item hyper-threading, 79
  \item Hyperbolic PDEs, 173
  \item hypercube, 114
  \item hyperthreading, 36, 81, 85--86
  \item hypervisor, 73

  \indexspace

  \item I/O subsystem, 15
  \item IBM, 104, 110, 151--153, 411
    \subitem BlueGene, 73, 120, 146
    \subitem BlueGene Q, 33
    \subitem Power series, 70
    \subitem Power6, 152
    \subitem Roadrunner, 63, 131
  \item IBVP, \see{Initial Boundary Value Problem}{496}
  \item ICL
    \subitem DAP, 68, 131
  \item idle, 135
  \item idle time, 96
  \item ILP, \see{Instruction Level Parallelism}{496}
  \item ILU, \see{Incomplete LU}{496}
  \item imbalance
    \subitem load, 107
  \item incidence matrix, 312
  \item \acl {ILU} (ILU), 217
  \item Incomplete LU (ILU)
    \subitem parallel, 256
  \item independent sets, 342
  \item indirect addressing, 203
  \item \acl {IBVP} (IBVP), 181--185
  \item \aclp {IBVP} (IBVP), 173
  \item \acl {IVP} (IVP), 166--172
  \item inner products, 252--253
  \item instruction
    \subitem handling
      \subsubitem in-order, 16
      \subsubitem out-of-order, 15
    \subitem issue, 69
  \item \acl {ILP} (ILP), 14, 20, 62, 74
  \item instruction pipeline, 20
  \item Intel, 21, 36, 69, 146
    \subitem 80287 co-processor, 164
    \subitem i860, 71, 131
    \subitem Itanium, 24, 146
    \subitem MIC, 147
    \subitem Paragon, 131
    \subitem Sandy Bridge, 14, 26
    \subitem Woodcrest, 31
    \subitem Xeon Phi, 16, 69, 81, 86, 131, 135
      \subsubitem bandwidth, 131
  \item inter-node communication, 99
  \item interior nodes, 342
  \item intra-node communication, 99
  \item irreducible, 344, \see{reducible}{497}
  \item Ising model, 322--323
  \item ispc, 108
  \item iterative methods, 211--228
  \item iterative refinement, 216
  \item IVP, \see{Initial Value Problem}{496}

  \indexspace

  \item Jacobi method, 214

  \indexspace

  \item kernel
    \subitem CUDA, 132
  \item Krylov methods, 211--228

  \indexspace

  \item LAN, \see{Local Area Network}{496}
  \item language
    \subitem context-free, 350
    \subitem context-sensitive, 350
    \subitem recursively enumerable, 350
    \subitem regular, 350
  \item Lapack, 144, 423, 425--426
  \item Laplace equation, 335, 347
  \item latency, 22, 121, 235
    \subitem hiding, 23, 40
  \item latency hiding, 108
  \item \aclp {LBM} (LBM), 156
  \item LBM, \see{Lattice Boltzmann Method}{496}
  \item leaf nodes, 342
  \item level sets, 210
  \item lexicographic ordering, 177, 178, 258
  \item libraries
    \subitem creating and using, 374--375
    \subitem numerical, 413--426, \see{Lapack}{426}, \see{PETSc}{426}
  \item Linda, 105
  \item linear algebra, 327--333
    \subitem software
      \subsubitem dense, 423--426
      \subsubitem sparse, 413--422
  \item linear array, 112
  \item linker, 374
  \item LINPACK
    \subitem benchmark, 41
  \item Linpack, 144, 423
    \subitem benchmark, 47, 144, 423
  \item Linux
    \subitem kernel, 73
  \item Lisp, 144
  \item Little's law, 33
  \item little-endian, 403, 411
  \item load
    \subitem balancing, 135--138
    \subitem balancing, dynamic, 136
    \subitem balancing,static, 136
    \subitem rebalancing, 137, 317
    \subitem redistributing, 137, 138
    \subitem unbalance, 70, 77, 88, 123, 135
  \item \acl {LAN} (LAN), 140
  \item local solve, 255
  \item locality, 14
    \subitem core, 46
    \subitem in parallel computing, 122
    \subitem spatial, 43
    \subitem temporal, 43
  \item lock, 80, \textbf{82}
  \item loop unrolling, 47, 59, 162
  \item LRU, \see{Least Recently Used}{496}
  \item LU factorization, 192

  \indexspace

  \item M-matrix, 176, 217
  \item machine   epsilon, \see{machine precision}{154}
  \item machine precision, 154
  \item Make, 376--388
  \item malloc, \texttt{78}
  \item Mandelbrot set, 76, 136
  \item mantissa, 151--153, 155, 157, 158
  \item manycore, 132
  \item MapReduce, 143--144
  \item Markov
    \subitem chains, 345
    \subitem matrix, 346
  \item MasPar, 68
  \item master-worker paradigm, 75
  \item matrix
    \subitem adjacency, 307, \see{adjacency matrix}{343}
    \subitem nonnegative, 312
    \subitem norms, 328
      \subsubitem associated, 328
    \subitem permutation, 343
    \subitem reducible, 313
    \subitem stochastic, 312
    \subitem storage, dense, 244--245
    \subitem storage, sparse, 200--204
    \subitem strictly upper triangular, 271
    \subitem structurally symmetric, 136, \textbf{205}, 251
    \subitem tesselation, 231
    \subitem unit upper triangular, 271
  \item Matrix Market, 203
    \subitem matrix format, 203
  \item matrix-matrix product
    \subitem Goto implementation, 59--61
    \subitem reuse in, 40
  \item matrix-vector product
    \subitem sparse, \see{sparse, matrix-vector product}{246}
  \item memory
    \subitem access pattern, 27
    \subitem banks, 34
    \subitem distributed, 71
    \subitem distributed shared, 73
    \subitem hierarchy, 21
    \subitem leak, 417, 434
    \subitem model, 82
    \subitem pages, 35
    \subitem shared, 71
    \subitem stall, 22
    \subitem violations, 433
    \subitem virtual shared, 73
    \subitem wall, 21, 476
  \item memory-bound, 14
  \item mercurial, 398--402
  \item \acl {MPI} (MPI), 92--98
  \item Metropolis algorithm, 323
  \item MGS, \see{Modified Gram-Schmidt}{496}
  \item MIC, \see{Many Integrated Cores}{496}
  \item MIMD, \see{Multiple Instruction Multiple Data}{496}
  \item minimum
    \subitem spanning tree, 236, 310
  \item minimum degree ordering, 211
  \item MIPS, 71
  \item MKL, 135, 423
  \item modified Gramm-Schmidt, \see{Gram-Schmidt, modified}{497}
  \item Moore's law, 62
  \item MPI, \see{Message Passing Interface}{496}
    \subitem MPI 3.0 draft, 95
  \item MSI, \see{Modified-Shared-Invalid}{496}
  \item MTA, \see{Multi-Threaded Architecture}{496}
  \item multi-colouring, 266
  \item \acl {MTA} (MTA), 130
  \item multi-threading, 86, 130
  \item multicore, 20, 27, \textbf{35--39}, 62, 72, 198, 276
    \subitem motivated by power, 63
  \item multigrid, 222
  \item \acl {MIMD} (MIMD), 70
  \item MUMPS, 475

  \indexspace

  \item $n_{1/2}$, 18
  \item N-body problems, 315--319
  \item natural ordering, 178
  \item nearest neighbour, 113
  \item nested dissection, 210, 258--264, 311
  \item Neumann boundary condition, 175
  \item Newton method, 218
  \item nm, \texttt{374}, 448
  \item node, 99, 113
  \item nodes, 340
  \item non-blocking communication, 92, 95, 96, 109
  \item non-local operation, 96
  \item \acl {NUMA} (NUMA), 72, 122
  \item norm, 327
  \item NP-complete, 143
  \item null termination, 452
  \item NUMA, \see{Non-Uniform Memory Access}{496}
  \item NVidia, 131
    \subitem Tesla, 156

  \indexspace

  \item object file, 374, 448
  \item octtree, 317
    \subitem hashed, 318
  \item ODE, \see{Ordinary Diffential Equation}{496}
  \item offloading, 135
  \item one-sided communication, 97--98, 105, 106
  \item OpenMP, 84, 86--88
  \item \acl {OS} (OS), 85, 353
  \item order, 334
  \item \acl {ODE} (ODE), 166--172
  \item OS, \see{Operating System}{496}
  \item out-of-order, \see{instruction, handling, out-of-order}{15}
  \item overdecomposition, 77, 107, 136, 244
  \item overflow, 150, 152
  \item overflow bit, 150
  \item overlays, 35

  \indexspace

  \item page table, 35
  \item PageRank, 249, 311--314
  \item pages
    \subitem memory, \see{memory, pages}{35}
  \item Parabolic PDEs, 173
  \item parallel fraction, 125
  \item parallel prefix, 271
  \item \acl {PRAM} (PRAM), 124
  \item parallelism
    \subitem data, 68, 74, 101
    \subitem dynamic, 86
    \subitem fine-grained, 74
    \subitem instruction-level, 64
    \subitem irregular, 76
  \item parallelization
    \subitem incremental, 86
  \item parameter sweep, 76
  \item partial derivates, 335
  \item \acl {PDE} (PDE), 173--185
  \item partial differential equations, 335--336
  \item partial ordering, 277
  \item partial pivoting, 190
  \item \acl {PGAS} (PGAS), 73, 99--105
  \item path (graph theory), 341
  \item PCI bus, 131, 132
  \item PCI-X, 135
  \item PCI-X bus, 134
  \item PDE, \see{Partial Diffential Equation}{496}
  \item peak performance, 20, 41, 46
  \item penta-diagonal, 178
  \item permutation, 209
  \item Perron vector, 312, 314
  \item Perron-Frobenius theorem, 332
  \item PETSc, 413--422
  \item PGAS, \see{Partitioned Global Address Space}{496}
  \item pipeline, 17--19, 47--48
    \subitem depth, 20, 62
    \subitem flush, 20
    \subitem instruction, 20
    \subitem length, 20
    \subitem processor, 69
    \subitem stall, 20
  \item pivoting, 188--190, 195--196
    \subitem diagonal, 190
    \subitem full, 190
    \subitem partial, 190
  \item pivots, 188
  \item PLapack, 423
  \item point-to-point   communication, 92
  \item Poisson equation, 174, 335
  \item power
    \subitem consumption, 61--63
    \subitem efficiency, 69
    \subitem wall, 62
  \item power method, 312, 313, 330
  \item PowerPC, 69
  \item PRAM, \see{Parallel Random Access Machine}{496}
  \item precision
    \subitem double, \see{double precision}{155}
    \subitem extended, \see{extended precision}{157}
    \subitem machine, \see{machine precision}{154}
    \subitem of the intermediate result, 157, 162
    \subitem single, \see{single precision}{155}
  \item preconditioner, 216--218
  \item predicate, 307
  \item prefetch data stream, 32
  \item Pregel, 107
  \item Prim's algorithm, 310
  \item probability vector, 313
  \item process, 78
    \subitem affinity, \see{affinity}{83}
  \item program counter, 13, 78, 85
  \item protein interactions, 306
  \item pseudo-random numbers, \see{random     numbers}{320}
  \item pthreads, 79--81
  \item purify, 443
  \item PVM, 97

  \indexspace

  \item QR factorization, 329
  \item Quicksort, 300--303

  \indexspace

  \item race condition, 82
  \item radix point, 151
  \item random numbers, 320--321
  \item random placement, 107, 137
  \item RDMA, \see{Remote Direct Memory Access}{496}
  \item re-association, 162
  \item real numbers
    \subitem representation of, 148
  \item recursive doubling, 19, 29, 267, 269--271
  \item red-black ordering, 178, 264--266
  \item reduce-scatter, 238, 241, 242, 251
  \item reducible, 205
  \item reduction, 236--237
    \subitem under multi-threading, 82
  \item reduction operations, 87
  \item redundancy, 111
  \item redundant computation, 274
  \item refinement
    \subitem adaptive, 137
  \item region of influence, 173
  \item register, 13, 21, \textbf{23--25}
    \subitem file, 23
    \subitem resident in, 24, 25
    \subitem spill, 24, 48
    \subitem variable, 25
  \item \acl {RDMA} (RDMA), 97
  \item remote method invocation, 105
  \item remote procedure call, 139
  \item repository, 389
  \item representation error
    \subitem absolute, 153
    \subitem relative, 153
  \item reproducibility, 162
    \subitem bitwise, 162
  \item residual, 212
  \item resource contention, 85
  \item revision control   systems, \see{source code control}{389}
  \item ring network, 112
  \item roofline model, 41
  \item round-off error analysis, 156--161
    \subitem in parallel computing, 161
  \item round-robin
    \subitem storage assignment, 101
    \subitem task scheduling, 88
  \item rounding, 153
    \subitem correct, 155
  \item row-major, 451

  \indexspace

  \item SaaS, \see{Software as-a Service}{496}
  \item SAN, \see{Storage Area Network}{496}
  \item scalability, 127--129
    \subitem strong, 127, 239
    \subitem weak, 127, 239
  \item Scalapack, 144, 423
  \item ScaleMP, 73
  \item scaling, 127--129
  \item scheduling
    \subitem dynamic, 77, 88
    \subitem fair-share, 142
    \subitem job, 142
    \subitem static, 88
  \item Scons, 376
  \item search direction, 224, 227
  \item segmentation fault, 441
  \item segmentation violation, 434
  \item semaphore, 82
  \item separable problem, 217
  \item separator, 258, 311
  \item Sequent Symmetry, 37
  \item sequential complexity of
    \subitem bitonic sorting, 305
  \item sequential consistency, 84, 85, 277
  \item sequential fraction, 125
  \item serialized execution, 89
  \item SFC, \see{Space-Filling Curve}{496}
  \item SGE, 142
  \item SGI, 130
    \subitem UV, 73
  \item sh, 353
  \item shared libraries, 374
  \item shell, 353
  \item shortest path
    \subitem all-pairs, 306
    \subitem single source, 306
  \item side effects, 144
  \item sign bit, 149, 151
  \item significant, 151
  \item significant digits, 158
  \item SIMD, \see{Single Instruction Multiple Data}{496}
    \subitem width, 41, 108
  \item \acl {SSE} (SSE), 69, 130, 318
  \item SIMT, \see{Single Instruction Multiple Thread}{496}
  \item \acl {SIMD} (SIMD), 108
  \item \acl {SIMT} (SIMT), 132
  \item single precision, 134
  \item \acl {SPMD} (SPMD), 70, 108
  \item skyline storage, 208
  \item Slurm, 142
  \item SM, \see{Streaming Multiprocessor}{496}
  \item small world, 311
  \item smoothers, 222
  \item SMP, \see{Symmetric Multi Processing}{497}
  \item snooping, 38, 112
  \item SOA, \see{Structure-Of-Arrays}{497}
  \item socket, 27, 36, 99, 146
  \item \acl {SaaS} (SaaS), 140
  \item SOR, \see{Successive Over-Relaxation}{497}
  \item sorting, 300--305
    \subitem networks, 301
  \item source code control, 389
    \subitem distributed, 389, 390, 398
  \item source-to-source transformations, 48
  \item SP, \see{Streaming Processor}{497}
  \item space-filling curve, 137--138
  \item spanning tree, 310
  \item sparse
    \subitem linear algebra, 199--211
    \subitem matrix, 176, 200, 343
      \subsubitem from PDEs, 177
    \subitem matrix-vector product
      \subsubitem implementation, 203
      \subsubitem in graph theory, 306
      \subsubitem locality in, 204
      \subsubitem parallel, 246--251
      \subsubitem parallel setup, 250--251
  \item spatial locality, \see{locality,     spatial}{43}
  \item SPD, \see{symmetric positive definite}{497}
  \item speculative execution, 20
  \item speedup, 70, 122
  \item SPMD, \see{Single Program Multiple Data}{497}
  \item SRAM, \see{Static Random-Access Memory}{497}
  \item SSE, \see{SIMD Streaming Extensions}{497}
  \item stall, 33
  \item static libraries, 374
  \item \acl {SRAM} (SRAM), 25
  \item stationary iteration, 213
  \item statistical mechanics, 323
  \item steady state, 171, 173, 174, 181, 336, 474
  \item stochastic matrix, 346
  \item \acl {SAN} (SAN), 139
  \item storage by diagonals, 200
  \item stride, 28, 44, 50
  \item strip mining, 59
  \item structurally symmetric, 343
  \item \acl {SOA} (SOA), 107
  \item subdomain, 258
  \item substructuring, 259
  \item Subversion, 389, 391--397
  \item \acl {SOR} (SOR), 215
  \item Sun
    \subitem Ray, 140
  \item superlinear speedup, 123
  \item superscalar, 14, 75
  \item superstep, 66
  \item supersteps, 98, 106
  \item surface-to-volume, 77
  \item svn, \see{Subversion}{391}
  \item swapped, 35
  \item switch, 116
    \subitem leaf, 118, 122
  \item symbol table, 439
  \item \acl {SMP} (SMP), 71, 112
  \item \acl {SPD} (SPD), 196, 222, 227, 228

  \indexspace

  \item TACC, 118
    \subitem ranger cluster, 120
    \subitem stampede cluster, 120
  \item task
    \subitem parallelism, 75--76
    \subitem queue, 75, 83, 308
  \item Taylor series, 168, 337--339
  \item temporal   locality, \see{locality, temporal}{43}
  \item Tera Computer
    \subitem MTA, 130
  \item ternary arithmetic, 152
  \item thin client, 140
  \item thread, \textbf{78--86}, 134
    \subitem affinity, \see{affinity}{83}
    \subitem blocks, 132, 133
    \subitem master, 78
    \subitem private data, 81
    \subitem safe, 87
    \subitem shared data, 81
    \subitem spawning, \textbf{78}
    \subitem team, 78
    \subitem use in OpenMP, 86
  \item throughput computing, 132
  \item Tianhe-1A, 131
  \item Titanium, 102
  \item TLB, \see{Translation Look-aside Buffer}{497}
    \subitem miss, 35
  \item top 500, 144--147
  \item topology, 109
  \item torus, 113
    \subitem clusters based on, 120
  \item TotalView, 438
  \item transactional memory, 83
  \item \acl {TLB} (TLB), 35, 484
  \item tree graph, 342
  \item tridiagonal, 178
  \item tridiagonal matrix, 176
  \item truncation, 153
  \item truncation error, 169, 175
  \item tuple space, 105
  \item Turing machine, 350

  \indexspace

  \item UMA, \see{Uniform Memory Access}{497}
  \item unconditionally stable, 171
  \item underflow, 152
    \subitem gradual, 152, 153, 163
  \item \acl {UPC} (UPC), 100--102
  \item \acl {UMA} (UMA), 71, 112, 117
  \item unitary basis transformations, 210
  \item unsigned, 149
  \item UPC, \see{Unified Parallel C}{497}
  \item utility computing, 140

  \indexspace

  \item valgrind, 443--444
  \item value safety, 162
  \item vector
    \subitem norms, 327
  \item vector processor, 69
  \item verbatim mode, 460
  \item version control systems, \see{source code control}{389}
  \item vertices, 340
  \item Virtual memory, 35
  \item virtualization, 140
  \item von Neumann architectures, 12

  \indexspace

  \item WAN, \see{Wide Area Network}{497}
  \item wavefront, 268--269
  \item weak scaling, 125
  \item weighted graph, 341
  \item \acl {WAN} (WAN), 140
  \item wildcard, 358
  \item work pool, 136
  \item World Wide Web, 306

  \indexspace

  \item X10, 104
  \item x86, 146

\end{theindex}
